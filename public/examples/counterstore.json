{
    "files": [
        {
            "name": "main",
            "content": "import { render } from \"solid-js/web\";\nimport { CounterProvider, useCounter } from \"counter-store\";\n\nconst MiddleComponent = () => <NestedComponent />;\n\nconst NestedComponent = () => {\n  const [counter, { increment, decrement }] = useCounter();\n  return (\n    <>\n      <p>{counter.count}</p>\n      <button onClick={increment}>+</button>\n      <button onClick={decrement}>-</button>\n    </>\n  );\n};\n\nconst App = () => (\n  <CounterProvider count={7}>\n    <MiddleComponent />\n  </CounterProvider>\n);\n\nrender(App, document.getElementById(\"app\"));"
        },
        {
            "name": "tab1",
            "content": "import { createState, createContext, useContext, Component } from \"solid-js\";\n\ntype CounterStore = [\n  { count: number },\n  { increment?: () => void; decrement?: () => void }\n];\n\nconst CounterContext = createContext<CounterStore>([{ count: 0 }, {}]);\n\nexport const CounterProvider: Component<{ count: number }> = props => {\n  const [state, setState] = createState({ count: props.count || 0 }),\n    store: CounterStore = [\n      state,\n      {\n        increment() {\n          setState(\"count\", c => c + 1);\n        },\n        decrement() {\n          setState(\"count\", c => c - 1);\n        }\n      }\n    ];\n\n  return (\n    <CounterContext.Provider value={store}>\n      {props.children}\n    </CounterContext.Provider>\n  );\n};\n\nexport function useCounter() {\n  return useContext(CounterContext);\n}"
        }
    ]
}